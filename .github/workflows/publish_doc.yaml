name: Deploy documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [$default-branch]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders

jobs:
  build_doc:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python environment
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install pip --upgrade
          pip install poetry
      - name: Installing coc-generator
        shell: bash -l {0}
        run: |
          poetry install
      - name: Build pages with Sphinx
        shell: bash -l {0}
        run: |
          poetry run sphinx-build docs/ docs/_build
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_PATH }}/docs/_build

  deploy_doc:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build_doc
    runs-on: ubuntu-latest
    name: Deploy Documentation
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
